#!/bin/ksh
#
alias true=1

integer dont_opt=
pid=0
ps_opts=
integer f_opt=
pat=
myline=
sig=
user=${USER:-n53389}


if [[ $# -eq 0 ]] ; then
  echo usage: kill [-n] [-#] [--\<psopts\>] [-f] pattern
  return
fi

while [[ $# -gt 0 ]] ; do
  if   expr "$1" : "-n" > /dev/null ; then
	 dont_opt=1
#   echo OPT1
  elif expr "$1" : "--.*" > /dev/null ; then
    tl=$(expr substr "$1" 2 999 )
    ps_opts=$(echo $ps_opts " " "$tl")
#   echo OPT2 $ps_opts
  elif expr "$1" : "-[0-9].*" > /dev/null ; then
    sig=$(expr "$1" : "\(-[0-9]*\)" )
#   echo OPT3 $sig
  elif expr "$1" : "-f" > /dev/null ; then
    f_opt=1
  elif expr "$1" : "-.*" > /dev/null ; then
    echo usage: kill [-n] [-#] [--\<psopts\>] [-f] pattern
    return
  else
    pat=$1
#   echo OPT4
  fi
  shift
done
#echo DONT_OPT $dont_opt PS_OPTS $ps_opts PAT $pat
ps -u $user $ps_opts | grep $pat | while read myline ; do
  pid=$( expr "$myline" : "\([0-9]*\)" )
  echo $myline
  if [[ dont_opt -eq 0 ]] ; then
	 if [[ f_opt -eq 0 ]] ; then
	   echo y/n
	   ans=$( line </dev/tty )
#	   echo ANS $ans
         else
           ans=y
         fi
	 if [[ ( "X$ans" = "Xy" ) || ( X$ans = Xy ) ]] ; then 
		kill $sig $pid
	 fi
  fi
done
