#!/bin/ksh
###########################################################
# Filename: mk
#
# Description:
#
#   Ksh script to fix include directives generated by Rose, 
#   generate dependency information and run make.
#   Compiler output is written to err and piped to more.
#
# Author: Dave Levett
###########################################################

# This should correct a problem with Rational Rose where
# it generates file directories with the DOS '\' rather than Unix '/'

alias make="/opt/SUNWspro.42/bin/dmake -j 6"


opts=

while expr "$1" : "-[a-z]*" > /dev/null ; do
  if test "$1" = "-n" ; then
    n_opt=$1
  fi
  opts="$opts $1"
  shift 1
done


if test "$1" != "clean" -a "$n_opt" == "" ;
then
egrep -l '#include \"rw\\' *.h > __mk_tmp
egrep -l '#include \"cxxcls\\' *.h >> __mk_tmp
# This will change all #include directives generated by Rational Rose 
# to use <> rather than "" 
egrep -l '#include \"' *.h >> __mk_tmp
for f in `cat __mk_tmp`
do
  echo Fixing backslashes and/or include directives in $f
  rr_slash_fix $f
done
rm __mk_tmp 2>/dev/null
fi

#  Remove the old make.out file
rm -f make.out 2>/dev/null

echo Build environment variables used to set up paths  | tee >> make.out
echo BUILD_AREA				: ${BUILD_AREA} | tee >> make.out
echo BUILD_ORACLE_VERSION	: ${BUILD_ORACLE_VERSION} | tee >> make.out
echo BUILD_RW_VERSION		: ${BUILD_RW_VERSION} | tee >> make.out
echo BUILD_VERSANT_VERSION	: ${BUILD_VERSANT_VERSION} | tee >> make.out

	if [[ ${BUILD_ORACLE_VERSION} ==  ORACLE7 ]] 
	then
		export ORACLE_HOME=/opt/oracle/7.3.4
		export PROCINCDIRS=-I${ORACLE_HOME}/precomp/public
		export PROC=/opt/oracle/7.3.4/bin/proc
	elif [[ ${BUILD_ORACLE_VERSION} ==  ORACLE8 ]] 
	then
		export ORACLE_HOME=/opt/oracle/8.0.6
		export PROCINCDIRS=-I${ORACLE_HOME}/precomp/public
		export PROC=/opt/oracle/8.0.6/bin/proc
	else
		echo Environment variable BUILD_ORACLE_VERSION not set
		export PROCINCDIRS=-
	fi

	if [[ ${BUILD_RW_VERSION} ==  RW6 ]] 
	then 
		#first is path for standard RW6 header files
		#second is path for RW7.0.9 STL headers (no suffix)
		export RWINCDIRS="-I/opt/dbtools/rogue -I/opt/rogue/include"
		export RW_DIR="-R/opt/dbtools/rogue/lib -L/opt/dbtools/rogue/lib"
		export RW_LIBS="-lrwora -lrwdb -lrwtool -lrwmth"
		export RW_VERSION_FLAGS=-DRW6
	elif [[ ${BUILD_RW_VERSION} ==  RW7 ]] 
	then
		if [[ ${BUILD_ORACLE_VERSION} ==  ORACLE7 ]] 
		then
			# put the quotes in because the strings have spaces in them
			#first is path for standard RW7.1.0 header files
			#second is path for RW7.1.0 STL headers (no suffix)
			export RWINCDIRS="-I/opt/rogue7.1.0/ora7 -I/opt/rogue7.1.0/ora7/include"
			export RW_DIR="-R/opt/rogue7.1.0/ora7/lib -L/opt/rogue7.1.0/ora7/lib"
			# libcomplex is a compiler lib needed by RW
			export RW_LIBS="-lora4d -ldbt4d -ltls4d -lbla4d -lmth4d -lstd12d -lcomplex"
		elif [[ ${BUILD_ORACLE_VERSION} ==  ORACLE8 ]] 
		then
			export RWINCDIRS="-I/opt/rogue7.1.0/ora8 -I/opt/rogue7.1.0/ora8/include"
			export RW_DIR="-R/opt/rogue7.1.0/ora8/lib -L/opt/rogue7.1.0/ora8/lib"
			# libcomplex is a compiler lib needed by RW
			export RW_LIBS="-lora4d -ldbt4d -ltls4d -lbla4d -lmth4d -lstd12d -lcomplex"
		fi
		export RW_VERSION_FLAGS=-DRW7
	else 
		echo Environment variable BUILD_RW_VERSION not set
		export RWINCDIRS=
		export RW_DIR=
		export RW_LIBS= 
		export RW_VERSION_FLAGS=
	fi

	if [[ ${BUILD_VERSANT_VERSION} == VERS_ON ]]
	then
		export VERSANTINCDIR=-I`oscp -p`/h
		export VERSANTLIBDIRS="-L`oscp -p`/lib -L`oscp -p`/lib/sun.4.0"
		export VERSANTLIBS="-lcxxcls -lvcoll -loscfe"
	else
		export VERSANTINCDIR=
		export VERSANTLIBDIRS=
		export VERSANTLIBS=
	fi

# Create dependency information
if [[ $1 != 'clean' ]]
then
	make_depend
else
# but make sure all.u exists otherwise it fails because it must include it
	touch all.u
fi

# Run make copying the output to "make.out" and pipe to more
echo NOW MAKE: $opts $*
make $opts $* 2>&1 | tee >> make.out 
